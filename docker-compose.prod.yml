version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: telegram_kafka_prod
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://5.44.40.79:9092
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      KAFKA_CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_KRAFT_CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - telegram_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: telegram_kafka_ui_prod
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    restart: unless-stopped
    networks:
      - telegram_network

  app:
    build: .
    container_name: telegram_app_prod
    ports:
      - "8080:8080"
    environment:
      POSTGRES_URL: jdbc:postgresql://5.44.40.79:5432/${POSTGRES_DB:telegram_db}
      POSTGRES_USER: ${POSTGRES_USER:postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - telegram_network

volumes:
  kafka_data:
    driver: local

networks:
  telegram_network:
    driver: bridge
