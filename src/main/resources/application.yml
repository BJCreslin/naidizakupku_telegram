spring:
  application:
    name: naidizakupku-telegram
  
#  datasource:
#    url: ${POSTGRES_URL:jdbc:postgresql://postgres:5432/telegram_db}
#    username: ${POSTGRES_USER:postgres}
#    password: ${POSTGRES_PASSWORD:password}
#    driver-class-name: org.postgresql.Driver

  datasource:
      url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/telegram_db}
      username: ${POSTGRES_USER:}
      password: ${POSTGRES_PASSWORD:}
      driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    defer-datasource-initialization: false
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    security:
      username: ${KAFKA_USER:}
      password: ${KAFKA_PASSWORD:}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
  
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: true

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  prometheus:
    metrics:
      export:
        enabled: true

telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN:}
    name: ${TELEGRAM_BOT_NAME:}
    username: ${TELEGRAM_BOT_USERNAME:}

logging:
  level:
    com.naidizakupku.telegram: INFO
    org.springframework.kafka: INFO
    org.telegram: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log
    max-size: 10MB
    max-history: 30

