image: openjdk:21-jdk-slim

stages:
  - test
  - build
  - docker
  - deploy

variables:
  DOCKER_IMAGE: "registry.gitflic.ru/project/bjcreslin/naidizakupku_telegram/telegram-app"
  DOCKER_TAG: "$CI_COMMIT_SHA"

test:
  stage: test
  tags:
    - docker
  scripts:
    - echo "Запускаю тесты для ветки $CI_COMMIT_REF_NAME"
    - chmod +x ./gradlew
    - ./gradlew test
  artifacts:
    name: test-results
    paths:
      - build/test-results/
    expire_in: 1 week

build:
  stage: build
  tags:
    - docker
  scripts:
    - echo "Собираю приложение"
    - chmod +x ./gradlew
    - ./gradlew clean build -x test
  artifacts:
    name: application-jar
    paths:
      - build/libs/*.jar
    expire_in: 1 week
  needs: ["test"]

docker-build:
  stage: docker
  tags:
    - docker
  when: manual
  scripts:
    - echo "Собираю Docker образ"
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
  needs: ["build"]

docker-push:
  stage: docker
  tags:
    - docker
  when: manual
  scripts:
    - echo "Авторизуюсь в GitFlic registry"
    - echo "$GITFLIC_PASS" | docker login -u "$GITFLIC_USER" --password-stdin registry.gitflic.ru
    - echo "Отправляю Docker образ"
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_IMAGE:latest
  needs: ["docker-build"]

deploy:
  stage: deploy
  tags:
    - docker
  when: manual
  scripts:
    - echo "Устанавливаю SSH клиент"
    - apt-get update -y
    - apt-get install openssh-client curl -y
    - echo "Настраиваю SSH подключение"
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - echo "Деплою на сервер"
    - |
      ssh -o "StrictHostKeyChecking=no" -p $SSH_PORT $SERVER_USER@$SERVER_IP "
        # Останавливаю старый контейнер
        docker stop telegram-app || true
        docker rm telegram-app || true
        
        # Удаляю старый образ
        docker rmi $DOCKER_IMAGE:latest || true
        
        # Авторизуюсь в GitFlic registry
        echo '$GITFLIC_PASS' | docker login -u '$GITFLIC_USER' --password-stdin registry.gitflic.ru
        
        # Скачиваю новый образ
        docker pull $DOCKER_IMAGE:$DOCKER_TAG
        docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
        
        # Запускаю новый контейнер
        docker run -d \\
          --name telegram-app \\
          --restart unless-stopped \\
          -p 8080:8080 \\
          -e POSTGRES_URL='$POSTGRES_URL' \\
          -e POSTGRES_USER='$POSTGRES_USER' \\
          -e POSTGRES_PASSWORD='$POSTGRES_PASSWORD' \\
          -e KAFKA_BOOTSTRAP_SERVERS='$KAFKA_BOOTSTRAP_SERVERS' \\
          -v /opt/telegram-app/logs:/app/logs \\
          $DOCKER_IMAGE:latest
        
        # Проверяю здоровье приложения
        sleep 30
        curl -f http://localhost:8080/actuator/health || exit 1
        
        echo 'Деплой завершен успешно'
      "
  needs: ["docker-push"]
